# dind.yml in pep/core> and pep/docker-build> should ideally be kept in sync

# Fake docker-in-docker: just spin up sibling containers by connecting to the host (unix:///var/run/docker.sock)
# This enables using the host cache
.dind-sock:
  tags:
    - docker-sock
  image: docker

# Actual docker-in-docker
.dind-dind:
  tags:
    # We cannot use a runner which has /var/run/docker.sock mounted, as this will render the socket busy and unusable for DinD
    - docker
  services:
    - docker:dind
  image: docker
  variables:
    # Certificates are necessary if we want to do TLS verification for DinD when connecting to the docker daemon.
    # These get generated by the docker:dind service and mounted by the gitlab-runner.
    # However, it requires certain configuration in the job image that is present in the standard `docker` image,
    # but not in our Ubuntu-based builder image: https://github.com/docker-library/docker/blob/49e7a0aa907a6033c2482efbf8e25bb97588b184/27/cli/Dockerfile#L155-L166,
    # which includes script https://github.com/docker-library/docker/blob/49e7a0aa907a6033c2482efbf8e25bb97588b184/27/cli/docker-entrypoint.sh.
    # We could copy this config + script, but it's probably not worth it, since we trust the linux-runner VM we're running in anyway.
    # Instead, we set this to empty to disable TLS verification.
    # See https://hub.docker.com/_/docker
    DOCKER_TLS_CERTDIR: ''
    # The same script that is missing from our builder image would also set the address of the docker daemon to connect with,
    # instead of the default unix:///var/run/docker.sock, so we have to manually set this as well.
    # With TLS we would have used port 2376, which is also why we get an error that we cannot connect to tcp://docker:2375
    # if we had TLS enabled without the configuration in the job image.
    DOCKER_HOST: tcp://docker:2375

.dind:
  # Change to switch between spinning up sibling containers and actual DinD
  extends: .dind-sock

# Currently the same
.dind-small:
  extends: .dind
