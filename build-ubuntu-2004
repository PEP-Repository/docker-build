# docker build -f build-ubuntu-2004 -t gitlabregistry.pep.cs.ru.nl/pep/docker-build/build-ubuntu-2004 .
# docker push gitlabregistry.pep.cs.ru.nl/pep/docker-build/build-ubuntu-2004
FROM ubuntu:20.04

RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y clang ninja-build golang golang-goprotobuf-dev ccache distcc git cmake valgrind \
	&& apt-get clean \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y libboost-all-dev zlib1g-dev libbz2-dev libsqlite3-dev libcurl4-openssl-dev curl libpam0g-dev libssl-dev libreadline-dev patch flex qt5-default qtdeclarative5-dev qttools5-dev qttools5-dev-tools libunwind-dev libc6-dev libc6-dev-i386 software-properties-common python-is-python3 unzip zip jq gnupg \
	&& apt-get clean \
	&& rm -rf /var/cache/* /var/lib/{apt,dpkg,cache,log}/* /tmp/* /var/tmp/*
# Install Docker as per instructions on https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y docker-ce docker-ce-cli containerd.io \
	&& apt-get clean \
	&& rm -rf /var/cache/* /var/lib/{apt,dpkg,cache,log}/* /tmp/* /var/tmp/*

ENV CC=clang
ENV CXX=clang++

# Add the compiler for the HSM firmware
# The following can be downloaded from http://software-dl.ti.com/codegen/non-esd/downloads/download.htm but requires registration for the 7.x.y versions (the 8.x.y branch does not work for us as they dropped support for an option we use)
#COPY ti_cgt_c6000_7.4.21_linux_installer_x86.bin /tmp
#RUN chmod +x /tmp/ti_cgt_c6000_7.4.21_linux_installer_x86.bin && /tmp/ti_cgt_c6000_7.4.21_linux_installer_x86.bin --mode unattended --prefix /opt && rm /tmp/ti_cgt_c6000_7.4.21_linux_installer_x86.bin
# Installer did not exit anymore (even though install seems successful), so installed files are now included in tgz file
ADD c6000_7.4.21.tgz /opt/

# Add Qt installer framework
ENV PATH="/opt/QtIFW/bin:${PATH}"
COPY QtInstallerFramework-linux-x64-3.0.1.run QtIFW-noninteractive.qs /tmp/
RUN chmod +x /tmp/QtInstallerFramework-linux-x64-3.0.1.run && /tmp/QtInstallerFramework-linux-x64-3.0.1.run --platform minimal --verbose --script /tmp/QtIFW-noninteractive.qs && rm -rf /tmp/*
